# CI/CD Pipeline Configuration
# GitHub Actions workflow for automated testing and deployment

name: 'Quirof√≠sicos Rocha CI/CD'

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ development, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: appointments_db_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create test environment
      run: |
        cp .env.template .env.test
        sed -i 's/your-database-password/testpassword/g' .env.test
        sed -i 's/appointments_db/appointments_db_test/g' .env.test
    
    - name: Setup test database
      run: |
        mysql -h 127.0.0.1 -u root -ptestpassword appointments_db_test < db/schema.sql
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Run linting (when implemented)
      run: npm run lint
    
    - name: Run tests (when implemented)
      run: npm test
      env:
        NODE_ENV: test
        DB_HOST: 127.0.0.1
        DB_PASSWORD: testpassword

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /var/www/quirofisicosRocha
          sudo ./deploy-production.sh
